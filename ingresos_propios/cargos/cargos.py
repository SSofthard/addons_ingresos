# -*- coding: utf-8 -*-
##############################################################################
#
#    OpenERP, Open Source Management Solution
#    Copyright (C) 2004-2010 Tiny SPRL (<http://tiny.be>).
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as
#    published by the Free Software Foundation, either version 3 of the
#    License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
##############################################################################
# Generated by the OpenERP plugin for Dia !
from openerp.osv import fields, osv

class cargos(osv.osv):
    """Cargos"""
    _name = 'cargos'
    _rec_name = 'cargo'
    
    _columns = {
        'cargo': fields.char('Cargo del Usuario',
                     size=100,
                     required=True,
                     help='Nombre del Cargo a Registrar'
                     ),
    }
    
class cargos_seleccion(osv.osv):
    """Relacion de Cargos"""
    _name = 'res.users'
    _inherit = 'res.users'
    
    def limpiar_campos(self,cr,uid,ids,nombre):
        res={}
        if nombre=='region':
            res={
            'ambito_id':'',
            #~ 'parroquia_id':'',
            #~ 'sector_id':'',
                }
        #~ if nombre=='ambito':
            #~ res={
            #~ 'parroquia_id':'',
            #~ 'sector_id':'',
                #~ }
        return {
         'value':res
            }
    _columns = {
        'cargo_id': fields.many2one('cargos',
                     'Seleccione el Cargo',
                     size=100,
                     required=True,
                     help='Cargo que posee el Usuario dentro de la Institución'
                     ),
        'region_id': fields.many2one('regiones',
                    'Región',
                    required=True,
                    help='Región al cual pertenece'),
        'ambito_id': fields.many2one('ambitos',
                    'Ambito',
                    required=True,
                    help='Ambito al cual pertenece'),
        'departamento_id': fields.many2one('departamentos',
                    'Departamento',
                    required=True,
                    help='Departamento al cual pertenece'),
        'parques_ids': fields.many2many('registro_parque',
                    'parques_usuarios',
                    'usuario_id',
                    'parque_id',
                    required=False,
                    help='Parques Relacionados'),
    }
